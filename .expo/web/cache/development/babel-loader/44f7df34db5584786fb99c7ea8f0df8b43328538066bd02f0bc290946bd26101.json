{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction PrimaryButton(_ref) {\n  var children = _ref.children,\n    onPress = _ref.onPress;\n  return _jsx(View, {\n    style: styles.buttonOuterContainer,\n    children: _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return pressed ? [styles.container, styles.pressed] : styles.container;\n      },\n      onPress: onPress,\n      android_ripple: {\n        color: \"grey\"\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: children\n      })\n    })\n  });\n}\nexport default PrimaryButton;\nvar styles = StyleSheet.create({\n  buttonOuterContainer: {\n    borderRadius: 28,\n    margin: 4,\n    overflow: 'hidden'\n  },\n  container: {\n    backgroundColor: \"white\",\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    elevation: 2\n  },\n  buttonText: {\n    color: 'black',\n    textAlign: 'center'\n  },\n  pressed: {\n    opacity: 0.75\n  }\n});","map":{"version":3,"names":["PrimaryButton","_ref","children","onPress","_jsx","View","style","styles","buttonOuterContainer","Pressable","_ref2","pressed","container","android_ripple","color","Text","buttonText","StyleSheet","create","borderRadius","margin","overflow","backgroundColor","paddingVertical","paddingHorizontal","elevation","textAlign","opacity"],"sources":["C:/Users/thegi/Downloads/starting-project/starting-project/components/PrimaryButton.js"],"sourcesContent":["import {View, Text, Pressable, StyleSheet} from 'react-native'\r\n//instead of passing regular props, we are going to deconstruct what we pass in right away. It's still props, just entered differently\r\n//we want our button to be reusable in each comp, so take props on it! \r\n//we need to add a prop that will allows comps that use this button to pass a func that will exe on press, so use onPress which will be invoked when button puress\r\nfunction PrimaryButton({children, onPress}){\r\n    //pass an obj to the android ripple with the color for the ripple\r\n    //pressed is a bool we can use to determine which style objs to apply, we can pass in an arr of styles!\r\n    return (\r\n    <View style={styles.buttonOuterContainer}>\r\n          <Pressable style={({pressed}) => pressed ? [styles.container, styles.pressed] :  styles.container} onPress={onPress} android_ripple={{color:\"grey\"}}>\r\n        <Text style={styles.buttonText}>{children}</Text>\r\n        </Pressable>\r\n    </View>\r\n )\r\n}\r\n\r\nexport default PrimaryButton\r\n\r\nconst styles = StyleSheet.create({\r\n    //cont styling:\r\n    buttonOuterContainer:{\r\n        borderRadius:28,\r\n        margin:4,\r\n        // makes sure that any styling from inside, like the ripple, will be trapped in the cont\r\n        overflow:'hidden'\r\n    },\r\n    container:{\r\n        backgroundColor:\"white\",\r\n        paddingVertical:8,\r\n        paddingHorizontal:16,\r\n        //android shadow!\r\n        elevation:2,\r\n    },\r\n    buttonText:{\r\n        color:'black',\r\n        textAlign:'center'\r\n    },\r\n    pressed:{\r\n        opacity:0.75\r\n    }\r\n})"],"mappings":";;;;;AAIA,SAASA,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAAnBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;EAGrC,OACAC,IAAA,CAACC,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,oBAAqB;IAAAN,QAAA,EACnCE,IAAA,CAACK,SAAS;MAACH,KAAK,EAAE,SAAAA,MAAAI,KAAA;QAAA,IAAEC,OAAO,GAAAD,KAAA,CAAPC,OAAO;QAAA,OAAMA,OAAO,GAAG,CAACJ,MAAM,CAACK,SAAS,EAAEL,MAAM,CAACI,OAAO,CAAC,GAAIJ,MAAM,CAACK,SAAS;MAAA,CAAC;MAACT,OAAO,EAAEA,OAAQ;MAACU,cAAc,EAAE;QAACC,KAAK,EAAC;MAAM,CAAE;MAAAZ,QAAA,EACtJE,IAAA,CAACW,IAAI;QAACT,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAd,QAAA,EAAEA;MAAQ,CAAO;IAAC,CACtC;EAAC,CACV,CAAC;AAEX;AAEA,eAAeF,aAAa;AAE5B,IAAMO,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAE7BV,oBAAoB,EAAC;IACjBW,YAAY,EAAC,EAAE;IACfC,MAAM,EAAC,CAAC;IAERC,QAAQ,EAAC;EACb,CAAC;EACDT,SAAS,EAAC;IACNU,eAAe,EAAC,OAAO;IACvBC,eAAe,EAAC,CAAC;IACjBC,iBAAiB,EAAC,EAAE;IAEpBC,SAAS,EAAC;EACd,CAAC;EACDT,UAAU,EAAC;IACPF,KAAK,EAAC,OAAO;IACbY,SAAS,EAAC;EACd,CAAC;EACDf,OAAO,EAAC;IACJgB,OAAO,EAAC;EACZ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}